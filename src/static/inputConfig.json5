[
  {
    label: 'vote',
    type: 'bool', // 0,1
  },
  {
    label: 'up/down-vote',
    type: 'int', // -1,0,1
  },


  {
    label: 'rating',
    type: 'numeric', // 0 <= numeric
    settings: [
      {
        label: 'max', el: 'text',
        key: 'opt-text-rating-max',
        // validate > 0
      },
      {
        label: 'step', el: 'text',
        key: 'opt-text-rating-step',
        // validate range > 0 and <= max
      }
    ]
  },
  {
    label: 'stars',
    type: 'numeric', // 0 <= numeric <=10
    settings: [
      {
        label: 'max', el: 'radio',
        key: 'opt-radio-stars-max',
        choices: [ // first is default
          '5',
          '10'
        ]
      },
      {
        label: 'step', el: 'radio',
        key: 'opt-radio-stars-step',
        choices: [ // first is default
          '1',
          '1/2'
        ]
      }
    ]
  },


  {
    label: 'percentage allocation',
    type: 'numeric', // 0 < numeric <= 100
  },


  {
    label: 'ranking', // (ui text input + up down arrow)
    type: 'int', // 0 < int
  }, // ^1 entry per rank
  {
    label: 'tier lists', // int (may map to fixed set of strings)
    type: 'int', // 0 < int
  }, // ^n entries per rank


  {
    label: 'binary comparison',
    type: 'int',
    settings: [{
      label: 'enable pass?', el: 'radio',
      key: 'opt-radio-binary-pass',
      choices: [ // first is default
        'no', // type bool: 0, 1
        'yes' // type int: -1, 0, 1 
      ]
    }]
  },


  {
    label: 'tag vote', // multi-bool (like emote reactions) [custom algorithm]
    type: 'array<int>', // corresponds to tag index
    settings: [{
      label: 'tags:', el: 'tagList',
      //key: 'opt-radio-binary-pass',
    }]
  }

  // is a free text input too far out of bounds?
]